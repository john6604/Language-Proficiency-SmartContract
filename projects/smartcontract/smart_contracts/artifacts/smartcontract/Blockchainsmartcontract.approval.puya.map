{
  "version": 3,
  "sources": [
    "../../smartcontract/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA;;;AACQ;AAAa;;AAAb;AASA;;AAA2B;AAA3B;AACA;;AAAiB;AAAjB;;AAZR;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAcK;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAUA;;AAAA;AAAA;AAAA;;AAAA;AAxBL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAwBK;;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAgCA;;AAAA;AAAA;AAAA;;AAAA;AAxDL;;;AAAA;AAAA;;AAwpFL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AAoFK;;;AAAA;AAAA;AASA;;AAAA;AAAA;AAAA;;AAAA;AA7FL;;;AAAA;AAAA;;AAAA;;;AAAA;;;AA6FK;;;AAAA;AAAA;AAYA;;AAAA;AAAA;AAAA;;AAAA;AAzGL;;;AAAA;AAAA;;AAyGK;;;AAAA;AAAA;AAYA;;AAAA;AAAA;AAAA;;AAAA;AArHL;;;AAAA;AAAA;;AAqHK;;;AAAA;AAAA;AA8BA;;AAAA;AAAA;AAAA;;AAAA;AAnJL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAmJK;;;AAAA;AAAA;AAuBA;;AAAA;AAAA;AAAA;;AAAA;AA1KL;;;AAAA;AAAA;;AA0KK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;AAAA;AAAA;AAAA;;AAAA;AAzLL;;;AAAA;AAAA;;AAyLK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAzLL;;AAAA;;;;;;;;;AAAA;AAAA;AAcA;;;AAE2B;;AAAnB;AAAiC;;AAAjC;AACc;;AAAd;;AAA4B;;AAA5B;AACiB;;AAAjB;;AAA+B;;AAA/B;AACgB;;AAAhB;;AAA8B;AAA9B;AACiB;;AAAjB;AAA+B;AAA/B;AACgB;;AAAhB;AAA8B;AAA9B;AACuB;;AAAvB;;AAAqC;;AAArC;;AAER;;;AAOe;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAA;AAAP;AAEc;;AAA0B;AAA1B;AAGY;AAAA;;AAAA;AAAA;AAAR;AAAiC;;AAAR;AAAnC;AACA;;AAFJ;AADW;AAMf;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;;AAAA;AACA;;AAAA;;AAA2B;;AAA3B;AACA;;AAAA;AAAA;;AAAA;AACA;;AAAA;;AAA0B;;AAA1B;AACA;;AAAA;AAA2B;AAA3B;AACA;;AAAA;;AAAkC;;AAAlC;AACA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AACA;AAAA;;AAAA;AAAA;AAAkB;AAAlB;AAAA;;AAAA;AAAA;AAEO;AAAA;;AAAA;AAAA;AAAiB;AAAjB;AAAP;AAER;;;;AAIe;;AAAA;;AAAA;AAAA;;;AAAyB;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAzB;;;;;;;;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AAEG;;AAA0B;;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAX;;;AACyB;;;;;;;;AAAb;;;;;AAEa;;;;;;;;;;AAAb;;AAED;;AAAA;AAAA;AAAA;AAAA;AAAX;;;AACuB;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;AAIX;;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAA;;AAAA;AAAA;AAJJ;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AASR;;;AAEe;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AAEA;;AAAA;;AAAA;;AAAA;;AAER;;;AAEe;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AACO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAEA;;AAAA;AAA2B;AAA3B;AACA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AACA;;AAAA;;AAAA;;AAAA;;AAER;;;AAEe;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AACO;;AAAA;AAAA;AAAA;AAAA;AAA4B;AAA5B;AAAP;AAEA;;AAAA;AAA2B;AAA3B;AACA;AAAA;;AAAA;AAAA;AAA4B;AAA5B;AAAA;;AAAA;AAAA;AACA;;AAAA;;AAAkC;;AAAlC;;AAER;;;AAEe;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AAEI;;AAA0B;;AAAA;AAAA;AAAA;AAAA;AAA1B;AADJ;AAGO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAIkB;;AAA0B;AAA1B;AAClB;;AAAA;AAAA;;AAAA;;AAgBR;;;AAIe;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AAI0C;;AAAA;AAAA;AAAA;AAAA;AAA1C;;AAAA;AAAA;;AAAA;AACqC;;AAAA;AAAA;;AAAA;AAAA;AAArC;;AAAA;;AAAA;;AAAA;AACwC;;AAAA;AAAA;;AAAA;AAAA;AAAxC;;AAAA;;AAAA;;AAAA;AACuC;;AAAA;AAAA;;AAAA;AAAA;AAAvC;;AAAA;;AAAA;;AAAA;AACwC;;AAAA;AAAA;AAAA;AAAA;AAAxC;;AAAA;AAAA;;AAAA;AACsC;;AAAA;AAAA;;AAAA;AAAA;AAAtC;;AAAA;;AAAA;;AAAA;AACuC;;AAAA;AAAA;AAAA;AAAA;AAAvC;;AAAA;AAAA;;AAAA;AAC8C;;AAAA;AAAA;;AAAA;AAAA;AAA9C;;AAAA;;AAAA;;AAAA;AAGA;;AAAA;;;;AAnCR;;;AAEyB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AACA;;AAAI;AAAJ;AACA;;AAAI;;AAAJ;AACA;;AAAI;;AAAJ;AACA;;AAAI;;AAAJ;AACA;;AAAI;AAAJ;AACA;;AAAI;;AAAJ;AACA;;AAAI;AAAJ;AACA;;AAAI;;AAAJ;;AAyBR;;;AAEe;;AAAA;;AAAA;AAAA;;;AAAyB;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAzB;;;;;;;;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AACO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAEG;;AAA0B;;AAAA;AAAA;AAAA;AAAA;AAA1B;AAAX;;;AACuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEf;AAER;;;AAEe;;AAAc;AAAA;AAAA;AAAA;AAAd;AAAA;;;AAA4B;;AAAA;;AAAA;AAA5B;;;;;;;;AAAP;AACiB;;AAAA;AAAA;AAAA;AACjB;AACO;AAAP;AAEI;;AAA0B;;AAAA;AAAA;AAAA;AAAA;AAA1B;AADJ;AAIG;;AAAA;AAAA;AAAA;AAAA;AAAX;;;AACuB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEf",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.approval_program",
      "params": {},
      "block": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1 126227704"
    },
    "9": {
      "op": "bytecblock \"certificateID\" \"is_revoked\" \"admin\" \"expiry_date\" \"counterCertificates\" \"skill_level\" \"revocation_reason\" \"language\" \"uniqueIDs\" \"issue_date\" \"issued_by\" 0x151f7c75"
    },
    "149": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "151": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "154": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.__init__",
      "op": "callsub __init__"
    },
    "157": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "160": {
      "op": "return",
      "stack_out": []
    },
    "161": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.__init__",
      "params": {},
      "block": "__init__",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "164": {
      "op": "bytec_2 // \"admin\""
    },
    "165": {
      "op": "global CreatorAddress",
      "defined_out": [
        "\"admin\"",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "\"admin\"",
        "new_state_value%0#0"
      ]
    },
    "167": {
      "op": "app_global_put",
      "stack_out": []
    },
    "168": {
      "op": "bytec 4 // \"counterCertificates\"",
      "defined_out": [
        "\"counterCertificates\""
      ],
      "stack_out": [
        "\"counterCertificates\""
      ]
    },
    "170": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"counterCertificates\"",
        "0"
      ],
      "stack_out": [
        "\"counterCertificates\"",
        "0"
      ]
    },
    "171": {
      "op": "app_global_put",
      "stack_out": []
    },
    "172": {
      "op": "bytec 8 // \"uniqueIDs\"",
      "defined_out": [
        "\"uniqueIDs\""
      ],
      "stack_out": [
        "\"uniqueIDs\""
      ]
    },
    "174": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"uniqueIDs\"",
        "0"
      ]
    },
    "175": {
      "op": "app_global_put",
      "stack_out": []
    },
    "176": {
      "retsub": true,
      "op": "retsub"
    },
    "177": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "180": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "182": {
      "op": "bz __puya_arc4_router___bare_routing@14",
      "stack_out": []
    },
    "185": {
      "op": "pushbytess 0x30c6d58a 0xd8025d77 0xe08e7389 0x1cc48d00 0xcdf5e9d0 0xf4100402 0xdaef6775 0xc21e663f 0x61db330e 0xa40df78b // method \"opt_in()void\", method \"issue_certificate(account,string,string)uint64\", method \"view_certificate(account)(byte[],string,string,byte[],string,string)\", method \"update_level(account,string)void\", method \"revoke_certificate(account,string)void\", method \"valid_certificate(account)void\", method \"renew_certificate(account)void\", method \"transfer_certificate(account,account)void\", method \"check_expiration(account)string\", method \"check_revocation(account)string\""
    },
    "237": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(check_expiration(account)string)",
        "Method(check_revocation(account)string)",
        "Method(issue_certificate(account,string,string)uint64)",
        "Method(opt_in()void)",
        "Method(renew_certificate(account)void)",
        "Method(revoke_certificate(account,string)void)",
        "Method(transfer_certificate(account,account)void)",
        "Method(update_level(account,string)void)",
        "Method(valid_certificate(account)void)",
        "Method(view_certificate(account)(byte[],string,string,byte[],string,string))",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(opt_in()void)",
        "Method(issue_certificate(account,string,string)uint64)",
        "Method(view_certificate(account)(byte[],string,string,byte[],string,string))",
        "Method(update_level(account,string)void)",
        "Method(revoke_certificate(account,string)void)",
        "Method(valid_certificate(account)void)",
        "Method(renew_certificate(account)void)",
        "Method(transfer_certificate(account,account)void)",
        "Method(check_expiration(account)string)",
        "Method(check_revocation(account)string)",
        "tmp%2#0"
      ]
    },
    "240": {
      "op": "match __puya_arc4_router___opt_in_route@2 __puya_arc4_router___issue_certificate_route@3 __puya_arc4_router___view_certificate_route@4 __puya_arc4_router___update_level_route@5 __puya_arc4_router___revoke_certificate_route@6 __puya_arc4_router___valid_certificate_route@7 __puya_arc4_router___renew_certificate_route@8 __puya_arc4_router___transfer_certificate_route@9 __puya_arc4_router___check_expiration_route@10 __puya_arc4_router___check_revocation_route@11",
      "stack_out": []
    },
    "262": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "263": {
      "retsub": true,
      "op": "retsub"
    },
    "264": {
      "block": "__puya_arc4_router___opt_in_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "266": {
      "op": "intc_1 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "OptIn"
      ]
    },
    "267": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "268": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "269": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "271": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "272": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.opt_in",
      "op": "callsub opt_in"
    },
    "275": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "276": {
      "retsub": true,
      "op": "retsub"
    },
    "277": {
      "block": "__puya_arc4_router___issue_certificate_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "279": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "280": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "281": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "283": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "284": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "287": {
      "op": "btoi",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "288": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "290": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "293": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%15#0"
      ]
    },
    "296": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%15#0",
        "tmp%16#0"
      ]
    },
    "299": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%13#0",
        "tmp%15#0",
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%15#0",
        "tmp%17#0"
      ]
    },
    "302": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.issue_certificate",
      "op": "callsub issue_certificate",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "305": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "306": {
      "op": "bytec 11 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "308": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "309": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "310": {
      "op": "log",
      "stack_out": []
    },
    "311": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "312": {
      "retsub": true,
      "op": "retsub"
    },
    "313": {
      "block": "__puya_arc4_router___view_certificate_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "315": {
      "op": "!",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "316": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "317": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "319": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "320": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "323": {
      "op": "btoi",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "324": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "326": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.view_certificate",
      "op": "callsub view_certificate",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0"
      ]
    },
    "329": {
      "op": "dig 5",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%0#0 (copy)",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "elements_to_encode%0#0 (copy)"
      ]
    },
    "331": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "length%0#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "length%0#0"
      ]
    },
    "332": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "as_bytes%0#0"
      ]
    },
    "333": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "length_uint16%0#0"
      ]
    },
    "336": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "length_uint16%0#0",
        "elements_to_encode%0#0"
      ]
    },
    "338": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0"
      ]
    },
    "339": {
      "op": "dig 5",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%1#0 (copy)",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "elements_to_encode%1#0 (copy)"
      ]
    },
    "341": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "length%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "length%1#0"
      ]
    },
    "342": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "as_bytes%1#0"
      ]
    },
    "343": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "length_uint16%1#0"
      ]
    },
    "346": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "length_uint16%1#0",
        "elements_to_encode%1#0"
      ]
    },
    "348": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ]
    },
    "349": {
      "op": "dig 5",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%2#0 (copy)",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "elements_to_encode%2#0 (copy)"
      ]
    },
    "351": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "length%2#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "length%2#0"
      ]
    },
    "352": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "as_bytes%2#0"
      ]
    },
    "353": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "length_uint16%2#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "length_uint16%2#0"
      ]
    },
    "356": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "length_uint16%2#0",
        "elements_to_encode%2#0"
      ]
    },
    "358": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0"
      ]
    },
    "359": {
      "op": "dig 5",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%3#0 (copy)",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "elements_to_encode%3#0 (copy)"
      ]
    },
    "361": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "length%3#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "length%3#0"
      ]
    },
    "362": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "as_bytes%3#0"
      ]
    },
    "363": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "length_uint16%3#0"
      ],
      "stack_out": [
        "elements_to_encode%3#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "length_uint16%3#0"
      ]
    },
    "366": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "length_uint16%3#0",
        "elements_to_encode%3#0"
      ]
    },
    "368": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ]
    },
    "369": {
      "op": "dig 5",
      "defined_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%4#0 (copy)",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "elements_to_encode%4#0 (copy)"
      ]
    },
    "371": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "length%4#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "length%4#0"
      ]
    },
    "372": {
      "op": "itob",
      "defined_out": [
        "as_bytes%4#0",
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "as_bytes%4#0"
      ]
    },
    "373": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "length_uint16%4#0"
      ],
      "stack_out": [
        "elements_to_encode%4#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "length_uint16%4#0"
      ]
    },
    "376": {
      "op": "uncover 6",
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "length_uint16%4#0",
        "elements_to_encode%4#0"
      ]
    },
    "378": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0"
      ]
    },
    "379": {
      "op": "dig 5",
      "defined_out": [
        "elements_to_encode%5#0",
        "elements_to_encode%5#0 (copy)",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "elements_to_encode%5#0 (copy)"
      ]
    },
    "381": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "length%5#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "length%5#0"
      ]
    },
    "382": {
      "op": "itob",
      "defined_out": [
        "as_bytes%5#0",
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "as_bytes%5#0"
      ]
    },
    "383": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "length_uint16%5#0"
      ],
      "stack_out": [
        "elements_to_encode%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "length_uint16%5#0"
      ]
    },
    "386": {
      "op": "uncover 6",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "length_uint16%5#0",
        "elements_to_encode%5#0"
      ]
    },
    "388": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ]
    },
    "389": {
      "op": "dig 5",
      "defined_out": [
        "encoded_value%0#0",
        "encoded_value%0#0 (copy)",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_value%0#0 (copy)"
      ]
    },
    "391": {
      "op": "len",
      "defined_out": [
        "data_length%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "data_length%0#0"
      ]
    },
    "392": {
      "op": "pushint 12 // 12",
      "defined_out": [
        "12",
        "data_length%0#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "data_length%0#0",
        "12"
      ]
    },
    "394": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0"
      ]
    },
    "395": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0",
        "current_tail_offset%1#0 (copy)"
      ]
    },
    "396": {
      "op": "itob",
      "defined_out": [
        "as_bytes%7#0",
        "current_tail_offset%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0",
        "as_bytes%7#0"
      ]
    },
    "397": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "offset_as_uint16%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0"
      ]
    },
    "400": {
      "op": "pushbytes 0x000c",
      "defined_out": [
        "0x000c",
        "current_tail_offset%1#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "offset_as_uint16%1#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0",
        "offset_as_uint16%1#0",
        "0x000c"
      ]
    },
    "404": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0",
        "0x000c",
        "offset_as_uint16%1#0"
      ]
    },
    "405": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "406": {
      "op": "dig 6",
      "defined_out": [
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%1#0 (copy)",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%1#0 (copy)"
      ]
    },
    "408": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%1#0",
        "data_length%1#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%1#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0"
      ]
    },
    "409": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%2#0",
        "data_length%1#0",
        "current_tail_offset%1#0"
      ]
    },
    "411": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "412": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "current_tail_offset%2#0 (copy)"
      ]
    },
    "413": {
      "op": "itob",
      "defined_out": [
        "as_bytes%8#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "as_bytes%8#0"
      ]
    },
    "414": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "offset_as_uint16%2#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%2#0",
        "current_tail_offset%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "417": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%2#0",
        "offset_as_uint16%2#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "419": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%2#0",
        "offset_as_uint16%2#0"
      ]
    },
    "420": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "421": {
      "op": "dig 5",
      "defined_out": [
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%2#0 (copy)",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%2#0 (copy)"
      ]
    },
    "423": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%2#0",
        "data_length%2#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%2#0",
        "encoded_tuple_buffer%3#0",
        "data_length%2#0"
      ]
    },
    "424": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%3#0",
        "data_length%2#0",
        "current_tail_offset%2#0"
      ]
    },
    "426": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%3#0"
      ]
    },
    "427": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%3#0",
        "current_tail_offset%3#0 (copy)",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%3#0",
        "current_tail_offset%3#0 (copy)"
      ]
    },
    "428": {
      "op": "itob",
      "defined_out": [
        "as_bytes%9#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%3#0",
        "as_bytes%9#0"
      ]
    },
    "429": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "offset_as_uint16%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%3#0",
        "current_tail_offset%3#0",
        "offset_as_uint16%3#0"
      ]
    },
    "432": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%3#0",
        "offset_as_uint16%3#0",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "434": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%3#0",
        "offset_as_uint16%3#0"
      ]
    },
    "435": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "436": {
      "op": "dig 4",
      "defined_out": [
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%3#0 (copy)",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%3#0 (copy)"
      ]
    },
    "438": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%3#0",
        "data_length%3#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%3#0",
        "encoded_tuple_buffer%4#0",
        "data_length%3#0"
      ]
    },
    "439": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%4#0",
        "data_length%3#0",
        "current_tail_offset%3#0"
      ]
    },
    "441": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%4#0",
        "current_tail_offset%4#0"
      ]
    },
    "442": {
      "op": "dup",
      "defined_out": [
        "current_tail_offset%4#0",
        "current_tail_offset%4#0 (copy)",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%4#0",
        "current_tail_offset%4#0",
        "current_tail_offset%4#0 (copy)"
      ]
    },
    "443": {
      "op": "itob",
      "defined_out": [
        "as_bytes%10#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%4#0",
        "current_tail_offset%4#0",
        "as_bytes%10#0"
      ]
    },
    "444": {
      "op": "extract 6 2",
      "defined_out": [
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%4#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "offset_as_uint16%4#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%4#0",
        "current_tail_offset%4#0",
        "offset_as_uint16%4#0"
      ]
    },
    "447": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%4#0",
        "offset_as_uint16%4#0",
        "encoded_tuple_buffer%4#0"
      ]
    },
    "449": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%4#0",
        "offset_as_uint16%4#0"
      ]
    },
    "450": {
      "op": "concat",
      "defined_out": [
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "451": {
      "op": "dig 3",
      "defined_out": [
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%4#0 (copy)",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%4#0 (copy)"
      ]
    },
    "453": {
      "op": "len",
      "defined_out": [
        "current_tail_offset%4#0",
        "data_length%4#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "current_tail_offset%4#0",
        "encoded_tuple_buffer%5#0",
        "data_length%4#0"
      ]
    },
    "454": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%5#0",
        "data_length%4#0",
        "current_tail_offset%4#0"
      ]
    },
    "456": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%5#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%5#0",
        "current_tail_offset%5#0"
      ]
    },
    "457": {
      "op": "itob",
      "defined_out": [
        "as_bytes%11#0",
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%5#0",
        "as_bytes%11#0"
      ]
    },
    "458": {
      "op": "extract 6 2",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "offset_as_uint16%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%5#0",
        "offset_as_uint16%5#0"
      ]
    },
    "461": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "462": {
      "op": "uncover 6",
      "stack_out": [
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0"
      ]
    },
    "464": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "465": {
      "op": "uncover 5",
      "stack_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%7#0",
        "encoded_value%1#0"
      ]
    },
    "467": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0",
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%2#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "468": {
      "op": "uncover 4",
      "stack_out": [
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%8#0",
        "encoded_value%2#0"
      ]
    },
    "470": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%9#0",
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%3#0",
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%9#0"
      ]
    },
    "471": {
      "op": "uncover 3",
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%9#0",
        "encoded_value%3#0"
      ]
    },
    "473": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%10#0",
        "encoded_value%4#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%4#0",
        "encoded_value%5#0",
        "encoded_tuple_buffer%10#0"
      ]
    },
    "474": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%5#0",
        "encoded_tuple_buffer%10#0",
        "encoded_value%4#0"
      ]
    },
    "476": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%5#0"
      ],
      "stack_out": [
        "encoded_value%5#0",
        "encoded_tuple_buffer%11#0"
      ]
    },
    "477": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%11#0",
        "encoded_value%5#0"
      ]
    },
    "478": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%12#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%12#0"
      ]
    },
    "479": {
      "op": "bytec 11 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%12#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%12#0",
        "0x151f7c75"
      ]
    },
    "481": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%12#0"
      ]
    },
    "482": {
      "op": "concat",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "483": {
      "op": "log",
      "stack_out": []
    },
    "484": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "485": {
      "retsub": true,
      "op": "retsub"
    },
    "486": {
      "block": "__puya_arc4_router___update_level_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "488": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "489": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "490": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "492": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "493": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "496": {
      "op": "btoi",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "497": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "499": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%33#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "tmp%34#0"
      ]
    },
    "502": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%33#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%33#0",
        "tmp%35#0"
      ]
    },
    "505": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.update_level",
      "op": "callsub update_level",
      "stack_out": []
    },
    "508": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "509": {
      "retsub": true,
      "op": "retsub"
    },
    "510": {
      "block": "__puya_arc4_router___revoke_certificate_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "512": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "513": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "514": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "516": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "517": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%40#0"
      ]
    },
    "520": {
      "op": "btoi",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "521": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "523": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "tmp%43#0"
      ]
    },
    "526": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%42#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%42#0",
        "tmp%44#0"
      ]
    },
    "529": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.revoke_certificate",
      "op": "callsub revoke_certificate",
      "stack_out": []
    },
    "532": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "533": {
      "retsub": true,
      "op": "retsub"
    },
    "534": {
      "block": "__puya_arc4_router___valid_certificate_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "536": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "537": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "538": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "540": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "541": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "544": {
      "op": "btoi",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "545": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "547": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.valid_certificate",
      "op": "callsub valid_certificate",
      "stack_out": []
    },
    "550": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "551": {
      "retsub": true,
      "op": "retsub"
    },
    "552": {
      "block": "__puya_arc4_router___renew_certificate_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "554": {
      "op": "!",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "555": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "556": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "558": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "559": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "562": {
      "op": "btoi",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "563": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "565": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.renew_certificate",
      "op": "callsub renew_certificate",
      "stack_out": []
    },
    "568": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "569": {
      "retsub": true,
      "op": "retsub"
    },
    "570": {
      "block": "__puya_arc4_router___transfer_certificate_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%59#0"
      ],
      "stack_out": [
        "tmp%59#0"
      ]
    },
    "572": {
      "op": "!",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "573": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "574": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "576": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "577": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "580": {
      "op": "btoi",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "581": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%65#0"
      ],
      "stack_out": [
        "tmp%65#0"
      ]
    },
    "583": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%65#0",
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "tmp%66#0"
      ]
    },
    "586": {
      "op": "btoi",
      "defined_out": [
        "tmp%65#0",
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "tmp%67#0"
      ]
    },
    "587": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%65#0",
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%65#0",
        "tmp%68#0"
      ]
    },
    "589": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.transfer_certificate",
      "op": "callsub transfer_certificate",
      "stack_out": []
    },
    "592": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "593": {
      "retsub": true,
      "op": "retsub"
    },
    "594": {
      "block": "__puya_arc4_router___check_expiration_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "596": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "597": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "598": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "600": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "601": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "604": {
      "op": "btoi",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "605": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "607": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.check_expiration",
      "op": "callsub check_expiration",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "610": {
      "op": "dup",
      "defined_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ],
      "stack_out": [
        "to_encode%1#0",
        "to_encode%1#0 (copy)"
      ]
    },
    "611": {
      "op": "len",
      "defined_out": [
        "length%6#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length%6#0"
      ]
    },
    "612": {
      "op": "itob",
      "defined_out": [
        "as_bytes%12#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "as_bytes%12#0"
      ]
    },
    "613": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%6#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0",
        "length_uint16%6#0"
      ]
    },
    "616": {
      "op": "swap",
      "stack_out": [
        "length_uint16%6#0",
        "to_encode%1#0"
      ]
    },
    "617": {
      "op": "concat",
      "defined_out": [
        "encoded_value%6#0"
      ],
      "stack_out": [
        "encoded_value%6#0"
      ]
    },
    "618": {
      "op": "bytec 11 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%6#0"
      ],
      "stack_out": [
        "encoded_value%6#0",
        "0x151f7c75"
      ]
    },
    "620": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%6#0"
      ]
    },
    "621": {
      "op": "concat",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "622": {
      "op": "log",
      "stack_out": []
    },
    "623": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "624": {
      "retsub": true,
      "op": "retsub"
    },
    "625": {
      "block": "__puya_arc4_router___check_revocation_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%77#0"
      ],
      "stack_out": [
        "tmp%77#0"
      ]
    },
    "627": {
      "op": "!",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "628": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "629": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "631": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "632": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "635": {
      "op": "btoi",
      "defined_out": [
        "tmp%82#0"
      ],
      "stack_out": [
        "tmp%82#0"
      ]
    },
    "636": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "638": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.check_revocation",
      "op": "callsub check_revocation",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "641": {
      "op": "dup",
      "defined_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ],
      "stack_out": [
        "to_encode%2#0",
        "to_encode%2#0 (copy)"
      ]
    },
    "642": {
      "op": "len",
      "defined_out": [
        "length%7#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length%7#0"
      ]
    },
    "643": {
      "op": "itob",
      "defined_out": [
        "as_bytes%13#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "as_bytes%13#0"
      ]
    },
    "644": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%7#0",
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0",
        "length_uint16%7#0"
      ]
    },
    "647": {
      "op": "swap",
      "stack_out": [
        "length_uint16%7#0",
        "to_encode%2#0"
      ]
    },
    "648": {
      "op": "concat",
      "defined_out": [
        "encoded_value%7#0"
      ],
      "stack_out": [
        "encoded_value%7#0"
      ]
    },
    "649": {
      "op": "bytec 11 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%7#0"
      ],
      "stack_out": [
        "encoded_value%7#0",
        "0x151f7c75"
      ]
    },
    "651": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%7#0"
      ]
    },
    "652": {
      "op": "concat",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "653": {
      "op": "log",
      "stack_out": []
    },
    "654": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "655": {
      "retsub": true,
      "op": "retsub"
    },
    "656": {
      "block": "__puya_arc4_router___bare_routing@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "658": {
      "op": "bnz __puya_arc4_router___after_if_else@18",
      "stack_out": []
    },
    "661": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "663": {
      "op": "!",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "664": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "665": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "666": {
      "retsub": true,
      "op": "retsub"
    },
    "667": {
      "block": "__puya_arc4_router___after_if_else@18",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "668": {
      "retsub": true,
      "op": "retsub"
    },
    "669": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.opt_in",
      "params": {},
      "block": "opt_in",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "672": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "674": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"certificateID\""
      ]
    },
    "675": {
      "op": "pushbytes 0x",
      "defined_out": [
        "\"certificateID\"",
        "0x",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"certificateID\"",
        "0x"
      ]
    },
    "677": {
      "op": "app_local_put",
      "stack_out": []
    },
    "678": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "680": {
      "op": "bytec 7 // \"language\"",
      "defined_out": [
        "\"language\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"language\""
      ]
    },
    "682": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "\"language\"",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "\"language\"",
        "\"\""
      ]
    },
    "684": {
      "op": "app_local_put",
      "stack_out": []
    },
    "685": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "687": {
      "op": "bytec 5 // \"skill_level\"",
      "defined_out": [
        "\"skill_level\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "\"skill_level\""
      ]
    },
    "689": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%2#0",
        "\"skill_level\"",
        "\"\""
      ]
    },
    "691": {
      "op": "app_local_put",
      "stack_out": []
    },
    "692": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "694": {
      "op": "bytec 9 // \"issue_date\"",
      "defined_out": [
        "\"issue_date\"",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"issue_date\""
      ]
    },
    "696": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"issue_date\"",
        "0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "\"issue_date\"",
        "0"
      ]
    },
    "697": {
      "op": "app_local_put",
      "stack_out": []
    },
    "698": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "700": {
      "op": "bytec_3 // \"expiry_date\"",
      "defined_out": [
        "\"expiry_date\"",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "\"expiry_date\""
      ]
    },
    "701": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "\"expiry_date\"",
        "0"
      ]
    },
    "702": {
      "op": "app_local_put",
      "stack_out": []
    },
    "703": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "705": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "\"is_revoked\""
      ]
    },
    "706": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "\"is_revoked\"",
        "0"
      ]
    },
    "707": {
      "op": "app_local_put",
      "stack_out": []
    },
    "708": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "710": {
      "op": "bytec 6 // \"revocation_reason\"",
      "defined_out": [
        "\"revocation_reason\"",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "\"revocation_reason\""
      ]
    },
    "712": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%6#0",
        "\"revocation_reason\"",
        "\"\""
      ]
    },
    "714": {
      "op": "app_local_put",
      "stack_out": []
    },
    "715": {
      "retsub": true,
      "op": "retsub"
    },
    "716": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.issue_certificate",
      "params": {
        "account#0": "bytes",
        "language#0": "bytes",
        "skill_level#0": "bytes"
      },
      "block": "issue_certificate",
      "stack_in": [],
      "op": "proto 3 1"
    },
    "719": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "721": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "722": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "723": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "724": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "725": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "726": {
      "op": "assert",
      "stack_out": []
    },
    "727": {
      "op": "frame_dig -3",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "729": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "730": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "731": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "732": {
      "error": "Account has not opted in to the application.",
      "op": "assert // Account has not opted in to the application.",
      "stack_out": [
        "result#0"
      ]
    },
    "733": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "734": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "735": {
      "error": "Certificate already issued to this account.",
      "op": "assert // Certificate already issued to this account.",
      "stack_out": []
    },
    "736": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "738": {
      "op": "intc_2 // 126227704",
      "defined_out": [
        "126227704",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "126227704"
      ]
    },
    "739": {
      "op": "+",
      "defined_out": [
        "expiry_date#0"
      ],
      "stack_out": [
        "expiry_date#0"
      ]
    },
    "740": {
      "op": "intc_0 // 0",
      "stack_out": [
        "expiry_date#0",
        "0"
      ]
    },
    "741": {
      "op": "bytec 8 // \"uniqueIDs\"",
      "defined_out": [
        "\"uniqueIDs\"",
        "0",
        "expiry_date#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "0",
        "\"uniqueIDs\""
      ]
    },
    "743": {
      "op": "app_global_get_ex",
      "defined_out": [
        "expiry_date#0",
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "744": {
      "error": "check self.uniqueIDs exists",
      "op": "assert // check self.uniqueIDs exists",
      "stack_out": [
        "expiry_date#0",
        "maybe_value%2#0"
      ]
    },
    "745": {
      "op": "itob",
      "defined_out": [
        "expiry_date#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "tmp%5#0"
      ]
    },
    "746": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "expiry_date#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "748": {
      "op": "itob",
      "defined_out": [
        "expiry_date#0",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "749": {
      "op": "concat",
      "defined_out": [
        "expiry_date#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "tmp%8#0"
      ]
    },
    "750": {
      "op": "txn Sender",
      "defined_out": [
        "expiry_date#0",
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "752": {
      "op": "concat",
      "defined_out": [
        "expiry_date#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "tmp%10#0"
      ]
    },
    "753": {
      "op": "sha256",
      "defined_out": [
        "encrypted_id#0",
        "expiry_date#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "encrypted_id#0"
      ]
    },
    "754": {
      "op": "frame_dig -3",
      "stack_out": [
        "expiry_date#0",
        "encrypted_id#0",
        "account#0 (copy)"
      ]
    },
    "756": {
      "op": "bytec_0 // \"certificateID\"",
      "stack_out": [
        "expiry_date#0",
        "encrypted_id#0",
        "account#0 (copy)",
        "\"certificateID\""
      ]
    },
    "757": {
      "op": "uncover 2",
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)",
        "\"certificateID\"",
        "encrypted_id#0"
      ]
    },
    "759": {
      "op": "app_local_put",
      "stack_out": [
        "expiry_date#0"
      ]
    },
    "760": {
      "op": "frame_dig -3",
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)"
      ]
    },
    "762": {
      "op": "bytec 7 // \"language\"",
      "defined_out": [
        "\"language\"",
        "account#0 (copy)",
        "expiry_date#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)",
        "\"language\""
      ]
    },
    "764": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"language\"",
        "account#0 (copy)",
        "expiry_date#0",
        "language#0 (copy)"
      ],
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)",
        "\"language\"",
        "language#0 (copy)"
      ]
    },
    "766": {
      "op": "app_local_put",
      "stack_out": [
        "expiry_date#0"
      ]
    },
    "767": {
      "op": "frame_dig -3",
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)"
      ]
    },
    "769": {
      "op": "bytec 5 // \"skill_level\"",
      "defined_out": [
        "\"skill_level\"",
        "account#0 (copy)",
        "expiry_date#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)",
        "\"skill_level\""
      ]
    },
    "771": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"skill_level\"",
        "account#0 (copy)",
        "expiry_date#0",
        "skill_level#0 (copy)"
      ],
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)",
        "\"skill_level\"",
        "skill_level#0 (copy)"
      ]
    },
    "773": {
      "op": "app_local_put",
      "stack_out": [
        "expiry_date#0"
      ]
    },
    "774": {
      "op": "frame_dig -3"
    },
    "776": {
      "op": "bytec 9 // \"issue_date\""
    },
    "778": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "\"issue_date\"",
        "account#0 (copy)",
        "expiry_date#0",
        "new_state_value%0#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)",
        "\"issue_date\"",
        "new_state_value%0#0"
      ]
    },
    "780": {
      "op": "app_local_put",
      "stack_out": [
        "expiry_date#0"
      ]
    },
    "781": {
      "op": "frame_dig -3",
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)"
      ]
    },
    "783": {
      "op": "bytec_3 // \"expiry_date\"",
      "defined_out": [
        "\"expiry_date\"",
        "account#0 (copy)",
        "expiry_date#0"
      ],
      "stack_out": [
        "expiry_date#0",
        "account#0 (copy)",
        "\"expiry_date\""
      ]
    },
    "784": {
      "op": "uncover 2",
      "stack_out": [
        "account#0 (copy)",
        "\"expiry_date\"",
        "expiry_date#0"
      ]
    },
    "786": {
      "op": "app_local_put",
      "stack_out": []
    },
    "787": {
      "op": "frame_dig -3"
    },
    "789": {
      "op": "bytec 10 // \"issued_by\""
    },
    "791": {
      "op": "txn Sender",
      "defined_out": [
        "\"issued_by\"",
        "account#0 (copy)",
        "new_state_value%1#0"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"issued_by\"",
        "new_state_value%1#0"
      ]
    },
    "793": {
      "op": "app_local_put",
      "stack_out": []
    },
    "794": {
      "op": "frame_dig -3",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "796": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"is_revoked\""
      ]
    },
    "797": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "\"is_revoked\"",
        "0"
      ]
    },
    "798": {
      "op": "app_local_put",
      "stack_out": []
    },
    "799": {
      "op": "frame_dig -3",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "801": {
      "op": "bytec 6 // \"revocation_reason\"",
      "defined_out": [
        "\"revocation_reason\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"revocation_reason\""
      ]
    },
    "803": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "\"revocation_reason\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"revocation_reason\"",
        "\"\""
      ]
    },
    "805": {
      "op": "app_local_put",
      "stack_out": []
    },
    "806": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "807": {
      "op": "bytec 4 // \"counterCertificates\"",
      "defined_out": [
        "\"counterCertificates\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counterCertificates\""
      ]
    },
    "809": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "810": {
      "error": "check self.counterCertificates exists",
      "op": "assert // check self.counterCertificates exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "811": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "1"
      ]
    },
    "812": {
      "op": "+",
      "defined_out": [
        "new_state_value%2#0"
      ],
      "stack_out": [
        "new_state_value%2#0"
      ]
    },
    "813": {
      "op": "bytec 4 // \"counterCertificates\"",
      "stack_out": [
        "new_state_value%2#0",
        "\"counterCertificates\""
      ]
    },
    "815": {
      "op": "swap",
      "stack_out": [
        "\"counterCertificates\"",
        "new_state_value%2#0"
      ]
    },
    "816": {
      "op": "app_global_put",
      "stack_out": []
    },
    "817": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "818": {
      "op": "bytec 8 // \"uniqueIDs\"",
      "stack_out": [
        "0",
        "\"uniqueIDs\""
      ]
    },
    "820": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "821": {
      "error": "check self.uniqueIDs exists",
      "op": "assert // check self.uniqueIDs exists",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "822": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%4#0",
        "1"
      ]
    },
    "823": {
      "op": "+",
      "defined_out": [
        "new_state_value%3#0"
      ],
      "stack_out": [
        "new_state_value%3#0"
      ]
    },
    "824": {
      "op": "bytec 8 // \"uniqueIDs\"",
      "stack_out": [
        "new_state_value%3#0",
        "\"uniqueIDs\""
      ]
    },
    "826": {
      "op": "swap",
      "stack_out": [
        "\"uniqueIDs\"",
        "new_state_value%3#0"
      ]
    },
    "827": {
      "op": "app_global_put",
      "stack_out": []
    },
    "828": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "829": {
      "op": "bytec 8 // \"uniqueIDs\"",
      "stack_out": [
        "0",
        "\"uniqueIDs\""
      ]
    },
    "831": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "832": {
      "error": "check self.uniqueIDs exists",
      "op": "assert // check self.uniqueIDs exists",
      "stack_out": [
        "maybe_value%5#0"
      ]
    },
    "833": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%5#0",
        "1"
      ]
    },
    "834": {
      "op": "-",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "835": {
      "retsub": true,
      "op": "retsub"
    },
    "836": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.view_certificate",
      "params": {
        "account#0": "bytes"
      },
      "block": "view_certificate",
      "stack_in": [],
      "op": "proto 1 6"
    },
    "839": {
      "op": "intc_0 // 0",
      "stack_out": [
        "expiration#0"
      ]
    },
    "840": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%0#0"
      ]
    },
    "842": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%0#0",
        "account#0 (copy)"
      ]
    },
    "844": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%1#0"
      ]
    },
    "845": {
      "op": "bnz view_certificate_bool_true@2",
      "stack_out": [
        "expiration#0"
      ]
    },
    "848": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%2#0"
      ]
    },
    "850": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%2#0",
        "0"
      ]
    },
    "851": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%2#0",
        "0",
        "\"admin\""
      ]
    },
    "852": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "853": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "expiration#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "854": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%3#0"
      ]
    },
    "855": {
      "op": "bz view_certificate_bool_false@3",
      "stack_out": [
        "expiration#0"
      ]
    },
    "858": {
      "block": "view_certificate_bool_true@2",
      "stack_in": [
        "expiration#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "expiration#0",
        "or_result%0#0"
      ]
    },
    "859": {
      "op": "b view_certificate_bool_merge@4"
    },
    "862": {
      "block": "view_certificate_bool_false@3",
      "stack_in": [
        "expiration#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "expiration#0",
        "or_result%0#0"
      ]
    },
    "863": {
      "block": "view_certificate_bool_merge@4",
      "stack_in": [
        "expiration#0",
        "or_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": [
        "expiration#0"
      ]
    },
    "864": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "account#0 (copy)"
      ]
    },
    "866": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "867": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "868": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "expiration#0",
        "result#0",
        "exists#0"
      ]
    },
    "869": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "expiration#0",
        "result#0"
      ]
    },
    "870": {
      "op": "len",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%4#0"
      ]
    },
    "871": {
      "error": "This account does not have any certificate",
      "op": "assert // This account does not have any certificate",
      "stack_out": [
        "expiration#0"
      ]
    },
    "872": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%6#0"
      ]
    },
    "874": {
      "op": "frame_dig -1",
      "stack_out": [
        "expiration#0",
        "tmp%6#0",
        "account#0 (copy)"
      ]
    },
    "876": {
      "op": "intc_0 // 0",
      "stack_out": [
        "expiration#0",
        "tmp%6#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "877": {
      "op": "bytec_3 // \"expiry_date\"",
      "defined_out": [
        "\"expiry_date\"",
        "0",
        "account#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%6#0",
        "account#0 (copy)",
        "0",
        "\"expiry_date\""
      ]
    },
    "878": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%6#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "879": {
      "error": "check self.expiry_date exists for account",
      "op": "assert // check self.expiry_date exists for account",
      "stack_out": [
        "expiration#0",
        "tmp%6#0",
        "maybe_value%2#0"
      ]
    },
    "880": {
      "op": "<",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "expiration#0",
        "tmp%7#0"
      ]
    },
    "881": {
      "op": "bz view_certificate_else_body@6",
      "stack_out": [
        "expiration#0"
      ]
    },
    "884": {
      "op": "pushbytes \"Valid.\"",
      "defined_out": [
        "expiration#0"
      ],
      "stack_out": [
        "expiration#0",
        "expiration#0"
      ]
    },
    "892": {
      "op": "frame_bury 0",
      "defined_out": [
        "expiration#0"
      ],
      "stack_out": [
        "expiration#0"
      ]
    },
    "894": {
      "op": "b view_certificate_after_if_else@7"
    },
    "897": {
      "block": "view_certificate_else_body@6",
      "stack_in": [
        "expiration#0"
      ],
      "op": "pushbytes \"Expired.\"",
      "defined_out": [
        "expiration#0"
      ],
      "stack_out": [
        "expiration#0",
        "expiration#0"
      ]
    },
    "907": {
      "op": "frame_bury 0",
      "defined_out": [
        "expiration#0"
      ],
      "stack_out": [
        "expiration#0"
      ]
    },
    "909": {
      "block": "view_certificate_after_if_else@7",
      "stack_in": [
        "expiration#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "account#0 (copy)"
      ]
    },
    "911": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "912": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "account#0 (copy)",
        "0",
        "\"is_revoked\""
      ]
    },
    "913": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "expiration#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "914": {
      "error": "check self.is_revoked exists for account",
      "op": "assert // check self.is_revoked exists for account",
      "stack_out": [
        "expiration#0",
        "maybe_value%3#0"
      ]
    },
    "915": {
      "op": "bnz view_certificate_else_body@9",
      "stack_out": [
        "expiration#0"
      ]
    },
    "918": {
      "op": "pushbytes \"Not revoked.\"",
      "defined_out": [
        "validity#0"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0"
      ]
    },
    "932": {
      "op": "b view_certificate_after_if_else@10"
    },
    "935": {
      "block": "view_certificate_else_body@9",
      "stack_in": [
        "expiration#0"
      ],
      "op": "pushbytes \"Revoked.\"",
      "defined_out": [
        "validity#0"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0"
      ]
    },
    "945": {
      "block": "view_certificate_after_if_else@10",
      "stack_in": [
        "expiration#0",
        "validity#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "account#0 (copy)"
      ]
    },
    "947": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "948": {
      "op": "bytec 7 // \"language\"",
      "defined_out": [
        "\"language\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "account#0 (copy)",
        "0",
        "\"language\""
      ]
    },
    "950": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "951": {
      "error": "check self.language exists for account",
      "op": "assert // check self.language exists for account",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0"
      ]
    },
    "952": {
      "op": "frame_dig -1",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "account#0 (copy)"
      ]
    },
    "954": {
      "op": "intc_0 // 0",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "955": {
      "op": "bytec 5 // \"skill_level\"",
      "defined_out": [
        "\"skill_level\"",
        "0",
        "account#0 (copy)",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "account#0 (copy)",
        "0",
        "\"skill_level\""
      ]
    },
    "957": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "958": {
      "error": "check self.skill_level exists for account",
      "op": "assert // check self.skill_level exists for account",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ]
    },
    "959": {
      "op": "frame_dig -1",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "account#0 (copy)"
      ]
    },
    "961": {
      "op": "intc_0 // 0",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "962": {
      "op": "bytec 10 // \"issued_by\"",
      "defined_out": [
        "\"issued_by\"",
        "0",
        "account#0 (copy)",
        "maybe_value%4#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "account#0 (copy)",
        "0",
        "\"issued_by\""
      ]
    },
    "964": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "965": {
      "error": "check self.issued_by exists for account",
      "op": "assert // check self.issued_by exists for account",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ]
    },
    "966": {
      "op": "frame_dig -1",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "account#0 (copy)"
      ]
    },
    "968": {
      "op": "cover 3",
      "stack_out": [
        "expiration#0",
        "validity#0",
        "account#0 (copy)",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ]
    },
    "970": {
      "op": "frame_dig 0",
      "defined_out": [
        "account#0 (copy)",
        "expiration#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "expiration#0",
        "validity#0",
        "account#0 (copy)",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "expiration#0"
      ]
    },
    "972": {
      "op": "uncover 5",
      "defined_out": [
        "account#0 (copy)",
        "expiration#0",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "validity#0"
      ],
      "stack_out": [
        "expiration#0",
        "account#0 (copy)",
        "maybe_value%4#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "expiration#0",
        "validity#0"
      ]
    },
    "974": {
      "op": "uncover 6"
    },
    "976": {
      "retsub": true,
      "op": "retsub"
    },
    "977": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.update_level",
      "params": {
        "account#0": "bytes",
        "new_skill_level#0": "bytes"
      },
      "block": "update_level",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "980": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "982": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "983": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "984": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "985": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "986": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "987": {
      "op": "assert",
      "stack_out": []
    },
    "988": {
      "op": "frame_dig -2",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "990": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "991": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "992": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "993": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "result#0"
      ]
    },
    "994": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "995": {
      "error": "This account does not have any certificate.",
      "op": "assert // This account does not have any certificate.",
      "stack_out": []
    },
    "996": {
      "op": "frame_dig -2",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "998": {
      "op": "bytec 5 // \"skill_level\"",
      "defined_out": [
        "\"skill_level\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"skill_level\""
      ]
    },
    "1000": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"skill_level\"",
        "account#0 (copy)",
        "new_skill_level#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"skill_level\"",
        "new_skill_level#0 (copy)"
      ]
    },
    "1002": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1003": {
      "retsub": true,
      "op": "retsub"
    },
    "1004": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.revoke_certificate",
      "params": {
        "account#0": "bytes",
        "reason#0": "bytes"
      },
      "block": "revoke_certificate",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1007": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1009": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1010": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "1011": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1012": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1013": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1014": {
      "op": "assert",
      "stack_out": []
    },
    "1015": {
      "op": "frame_dig -2",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1017": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1018": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "1019": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "1020": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "result#0"
      ]
    },
    "1021": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1022": {
      "error": "This account does not have any certificate.",
      "op": "assert // This account does not have any certificate.",
      "stack_out": []
    },
    "1023": {
      "op": "frame_dig -2",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1025": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1026": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"is_revoked\""
      ]
    },
    "1027": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1028": {
      "error": "check self.is_revoked exists for account",
      "op": "assert // check self.is_revoked exists for account",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1029": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1030": {
      "op": "assert",
      "stack_out": []
    },
    "1031": {
      "op": "frame_dig -2",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1033": {
      "op": "bytec_1 // \"is_revoked\"",
      "stack_out": [
        "account#0 (copy)",
        "\"is_revoked\""
      ]
    },
    "1034": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"is_revoked\"",
        "1",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"is_revoked\"",
        "1"
      ]
    },
    "1035": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1036": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1037": {
      "op": "bytec 4 // \"counterCertificates\"",
      "defined_out": [
        "\"counterCertificates\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counterCertificates\""
      ]
    },
    "1039": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1040": {
      "error": "check self.counterCertificates exists",
      "op": "assert // check self.counterCertificates exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1041": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%3#0",
        "1"
      ]
    },
    "1042": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1043": {
      "op": "bytec 4 // \"counterCertificates\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"counterCertificates\""
      ]
    },
    "1045": {
      "op": "swap",
      "stack_out": [
        "\"counterCertificates\"",
        "new_state_value%0#0"
      ]
    },
    "1046": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1047": {
      "op": "frame_dig -2",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1049": {
      "op": "bytec 6 // \"revocation_reason\"",
      "defined_out": [
        "\"revocation_reason\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"revocation_reason\""
      ]
    },
    "1051": {
      "op": "frame_dig -1",
      "defined_out": [
        "\"revocation_reason\"",
        "account#0 (copy)",
        "reason#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"revocation_reason\"",
        "reason#0 (copy)"
      ]
    },
    "1053": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1054": {
      "retsub": true,
      "op": "retsub"
    },
    "1055": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.valid_certificate",
      "params": {
        "account#0": "bytes"
      },
      "block": "valid_certificate",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1058": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1060": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1061": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "1062": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1063": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1064": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1065": {
      "op": "assert",
      "stack_out": []
    },
    "1066": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1068": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1069": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "1070": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "1071": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "result#0"
      ]
    },
    "1072": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1073": {
      "error": "This account does not have any certificate.",
      "op": "assert // This account does not have any certificate.",
      "stack_out": []
    },
    "1074": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1076": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1077": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"is_revoked\""
      ]
    },
    "1078": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1079": {
      "error": "check self.is_revoked exists for account",
      "op": "assert // check self.is_revoked exists for account",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1080": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "1"
      ]
    },
    "1081": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1082": {
      "op": "assert",
      "stack_out": []
    },
    "1083": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1085": {
      "op": "bytec_1 // \"is_revoked\"",
      "stack_out": [
        "account#0 (copy)",
        "\"is_revoked\""
      ]
    },
    "1086": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "\"is_revoked\"",
        "0"
      ]
    },
    "1087": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1088": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "1089": {
      "op": "bytec 4 // \"counterCertificates\"",
      "defined_out": [
        "\"counterCertificates\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"counterCertificates\""
      ]
    },
    "1091": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1092": {
      "error": "check self.counterCertificates exists",
      "op": "assert // check self.counterCertificates exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1093": {
      "op": "intc_1 // 1",
      "stack_out": [
        "maybe_value%3#0",
        "1"
      ]
    },
    "1094": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "1095": {
      "op": "bytec 4 // \"counterCertificates\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"counterCertificates\""
      ]
    },
    "1097": {
      "op": "swap",
      "stack_out": [
        "\"counterCertificates\"",
        "new_state_value%0#0"
      ]
    },
    "1098": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1099": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1101": {
      "op": "bytec 6 // \"revocation_reason\"",
      "defined_out": [
        "\"revocation_reason\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"revocation_reason\""
      ]
    },
    "1103": {
      "op": "pushbytes \"\"",
      "defined_out": [
        "\"\"",
        "\"revocation_reason\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"revocation_reason\"",
        "\"\""
      ]
    },
    "1105": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1106": {
      "retsub": true,
      "op": "retsub"
    },
    "1107": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.renew_certificate",
      "params": {
        "account#0": "bytes"
      },
      "block": "renew_certificate",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1110": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1112": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1113": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "1114": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1115": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1116": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1117": {
      "op": "assert",
      "stack_out": []
    },
    "1118": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1120": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1121": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "1122": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "1123": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "result#0"
      ]
    },
    "1124": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1125": {
      "error": "This account does not have any certificate.",
      "op": "assert // This account does not have any certificate.",
      "stack_out": []
    },
    "1126": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1128": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%4#0",
        "account#0 (copy)"
      ]
    },
    "1130": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "1131": {
      "op": "bytec_3 // \"expiry_date\"",
      "defined_out": [
        "\"expiry_date\"",
        "0",
        "account#0 (copy)",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "account#0 (copy)",
        "0",
        "\"expiry_date\""
      ]
    },
    "1132": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1133": {
      "error": "check self.expiry_date exists for account",
      "op": "assert // check self.expiry_date exists for account",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%2#0"
      ]
    },
    "1134": {
      "op": ">",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1135": {
      "error": "This certificate is not caducated.",
      "op": "assert // This certificate is not caducated.",
      "stack_out": []
    },
    "1136": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1138": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1139": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"is_revoked\""
      ]
    },
    "1140": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1141": {
      "error": "check self.is_revoked exists for account",
      "op": "assert // check self.is_revoked exists for account",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1142": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1143": {
      "error": "Cannot renew a revoked certificate.",
      "op": "assert // Cannot renew a revoked certificate.",
      "stack_out": []
    },
    "1144": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1146": {
      "op": "intc_2 // 126227704",
      "defined_out": [
        "126227704",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "126227704"
      ]
    },
    "1147": {
      "op": "+",
      "defined_out": [
        "new_expiry_date#0"
      ],
      "stack_out": [
        "new_expiry_date#0"
      ]
    },
    "1148": {
      "op": "frame_dig -1",
      "stack_out": [
        "new_expiry_date#0",
        "account#0 (copy)"
      ]
    },
    "1150": {
      "op": "bytec_3 // \"expiry_date\"",
      "stack_out": [
        "new_expiry_date#0",
        "account#0 (copy)",
        "\"expiry_date\""
      ]
    },
    "1151": {
      "op": "uncover 2",
      "stack_out": [
        "account#0 (copy)",
        "\"expiry_date\"",
        "new_expiry_date#0"
      ]
    },
    "1153": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1154": {
      "retsub": true,
      "op": "retsub"
    },
    "1155": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.transfer_certificate",
      "params": {
        "origin_account#0": "bytes",
        "destination_account#0": "bytes"
      },
      "block": "transfer_certificate",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1158": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1160": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1161": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "1162": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1163": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1164": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1165": {
      "op": "assert",
      "stack_out": []
    },
    "1166": {
      "op": "frame_dig -2",
      "defined_out": [
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1168": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1169": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "1170": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "1171": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "result#0"
      ]
    },
    "1172": {
      "op": "len",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1173": {
      "error": "This account does not have any certificate.",
      "op": "assert // This account does not have any certificate.",
      "stack_out": []
    },
    "1174": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1176": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1177": {
      "op": "bytec_0 // \"certificateID\"",
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "1178": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1179": {
      "error": "check self.certificateID exists for account",
      "op": "assert // check self.certificateID exists for account",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1180": {
      "op": "frame_dig -1",
      "defined_out": [
        "destination_account#0 (copy)",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "destination_account#0 (copy)"
      ]
    },
    "1182": {
      "op": "bytec_0 // \"certificateID\"",
      "stack_out": [
        "maybe_value%3#0",
        "destination_account#0 (copy)",
        "\"certificateID\""
      ]
    },
    "1183": {
      "op": "uncover 2",
      "stack_out": [
        "destination_account#0 (copy)",
        "\"certificateID\"",
        "maybe_value%3#0"
      ]
    },
    "1185": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1186": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1188": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1189": {
      "op": "bytec 7 // \"language\"",
      "defined_out": [
        "\"language\"",
        "0",
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"language\""
      ]
    },
    "1191": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1192": {
      "error": "check self.language exists for account",
      "op": "assert // check self.language exists for account",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "1193": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%4#0",
        "destination_account#0 (copy)"
      ]
    },
    "1195": {
      "op": "bytec 7 // \"language\"",
      "stack_out": [
        "maybe_value%4#0",
        "destination_account#0 (copy)",
        "\"language\""
      ]
    },
    "1197": {
      "op": "uncover 2",
      "stack_out": [
        "destination_account#0 (copy)",
        "\"language\"",
        "maybe_value%4#0"
      ]
    },
    "1199": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1200": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1202": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1203": {
      "op": "bytec 5 // \"skill_level\"",
      "defined_out": [
        "\"skill_level\"",
        "0",
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"skill_level\""
      ]
    },
    "1205": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1206": {
      "error": "check self.skill_level exists for account",
      "op": "assert // check self.skill_level exists for account",
      "stack_out": [
        "maybe_value%5#0"
      ]
    },
    "1207": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%5#0",
        "destination_account#0 (copy)"
      ]
    },
    "1209": {
      "op": "bytec 5 // \"skill_level\"",
      "stack_out": [
        "maybe_value%5#0",
        "destination_account#0 (copy)",
        "\"skill_level\""
      ]
    },
    "1211": {
      "op": "uncover 2",
      "stack_out": [
        "destination_account#0 (copy)",
        "\"skill_level\"",
        "maybe_value%5#0"
      ]
    },
    "1213": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1214": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1216": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1217": {
      "op": "bytec 9 // \"issue_date\"",
      "defined_out": [
        "\"issue_date\"",
        "0",
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"issue_date\""
      ]
    },
    "1219": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1220": {
      "error": "check self.issue_date exists for account",
      "op": "assert // check self.issue_date exists for account",
      "stack_out": [
        "maybe_value%6#0"
      ]
    },
    "1221": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%6#0",
        "destination_account#0 (copy)"
      ]
    },
    "1223": {
      "op": "bytec 9 // \"issue_date\"",
      "stack_out": [
        "maybe_value%6#0",
        "destination_account#0 (copy)",
        "\"issue_date\""
      ]
    },
    "1225": {
      "op": "uncover 2",
      "stack_out": [
        "destination_account#0 (copy)",
        "\"issue_date\"",
        "maybe_value%6#0"
      ]
    },
    "1227": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1228": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1230": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1231": {
      "op": "bytec_3 // \"expiry_date\"",
      "defined_out": [
        "\"expiry_date\"",
        "0",
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"expiry_date\""
      ]
    },
    "1232": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%7#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "1233": {
      "error": "check self.expiry_date exists for account",
      "op": "assert // check self.expiry_date exists for account",
      "stack_out": [
        "maybe_value%7#0"
      ]
    },
    "1234": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%7#0",
        "destination_account#0 (copy)"
      ]
    },
    "1236": {
      "op": "bytec_3 // \"expiry_date\"",
      "stack_out": [
        "maybe_value%7#0",
        "destination_account#0 (copy)",
        "\"expiry_date\""
      ]
    },
    "1237": {
      "op": "uncover 2",
      "stack_out": [
        "destination_account#0 (copy)",
        "\"expiry_date\"",
        "maybe_value%7#0"
      ]
    },
    "1239": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1240": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1242": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1243": {
      "op": "bytec 10 // \"issued_by\"",
      "defined_out": [
        "\"issued_by\"",
        "0",
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"issued_by\""
      ]
    },
    "1245": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0"
      ],
      "stack_out": [
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1246": {
      "error": "check self.issued_by exists for account",
      "op": "assert // check self.issued_by exists for account",
      "stack_out": [
        "maybe_value%8#0"
      ]
    },
    "1247": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%8#0",
        "destination_account#0 (copy)"
      ]
    },
    "1249": {
      "op": "bytec 10 // \"issued_by\"",
      "stack_out": [
        "maybe_value%8#0",
        "destination_account#0 (copy)",
        "\"issued_by\""
      ]
    },
    "1251": {
      "op": "uncover 2",
      "stack_out": [
        "destination_account#0 (copy)",
        "\"issued_by\"",
        "maybe_value%8#0"
      ]
    },
    "1253": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1254": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1256": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1257": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "0",
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"is_revoked\""
      ]
    },
    "1258": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0"
      ],
      "stack_out": [
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1259": {
      "error": "check self.is_revoked exists for account",
      "op": "assert // check self.is_revoked exists for account",
      "stack_out": [
        "maybe_value%9#0"
      ]
    },
    "1260": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%9#0",
        "destination_account#0 (copy)"
      ]
    },
    "1262": {
      "op": "bytec_1 // \"is_revoked\"",
      "stack_out": [
        "maybe_value%9#0",
        "destination_account#0 (copy)",
        "\"is_revoked\""
      ]
    },
    "1263": {
      "op": "uncover 2",
      "stack_out": [
        "destination_account#0 (copy)",
        "\"is_revoked\"",
        "maybe_value%9#0"
      ]
    },
    "1265": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1266": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1268": {
      "op": "intc_0 // 0",
      "stack_out": [
        "origin_account#0 (copy)",
        "0"
      ]
    },
    "1269": {
      "op": "bytec 6 // \"revocation_reason\"",
      "defined_out": [
        "\"revocation_reason\"",
        "0",
        "origin_account#0 (copy)"
      ],
      "stack_out": [
        "origin_account#0 (copy)",
        "0",
        "\"revocation_reason\""
      ]
    },
    "1271": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0"
      ],
      "stack_out": [
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "1272": {
      "error": "check self.revocation_reason exists for account",
      "op": "assert // check self.revocation_reason exists for account",
      "stack_out": [
        "maybe_value%10#0"
      ]
    },
    "1273": {
      "op": "frame_dig -1",
      "stack_out": [
        "maybe_value%10#0",
        "destination_account#0 (copy)"
      ]
    },
    "1275": {
      "op": "bytec 6 // \"revocation_reason\"",
      "stack_out": [
        "maybe_value%10#0",
        "destination_account#0 (copy)",
        "\"revocation_reason\""
      ]
    },
    "1277": {
      "op": "uncover 2",
      "stack_out": [
        "destination_account#0 (copy)",
        "\"revocation_reason\"",
        "maybe_value%10#0"
      ]
    },
    "1279": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1280": {
      "op": "frame_dig -2",
      "stack_out": [
        "origin_account#0 (copy)"
      ]
    },
    "1282": {
      "callsub": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.delete_account",
      "op": "callsub delete_account",
      "stack_out": []
    },
    "1285": {
      "retsub": true,
      "op": "retsub"
    },
    "1286": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.delete_account",
      "params": {
        "account#0": "bytes"
      },
      "block": "delete_account",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1289": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1291": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1292": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "1293": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "1294": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "result#0"
      ]
    },
    "1295": {
      "op": "len",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1296": {
      "error": "This account does not have any certificate.",
      "op": "assert // This account does not have any certificate.",
      "stack_out": []
    },
    "1297": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1299": {
      "op": "bytec_0 // \"certificateID\"",
      "stack_out": [
        "account#0 (copy)",
        "\"certificateID\""
      ]
    },
    "1300": {
      "op": "app_local_del",
      "stack_out": []
    },
    "1301": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1303": {
      "op": "bytec 7 // \"language\"",
      "defined_out": [
        "\"language\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"language\""
      ]
    },
    "1305": {
      "op": "app_local_del",
      "stack_out": []
    },
    "1306": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1308": {
      "op": "bytec 5 // \"skill_level\"",
      "defined_out": [
        "\"skill_level\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"skill_level\""
      ]
    },
    "1310": {
      "op": "app_local_del",
      "stack_out": []
    },
    "1311": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1313": {
      "op": "bytec 9 // \"issue_date\"",
      "defined_out": [
        "\"issue_date\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"issue_date\""
      ]
    },
    "1315": {
      "op": "app_local_del",
      "stack_out": []
    },
    "1316": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1318": {
      "op": "bytec_3 // \"expiry_date\"",
      "defined_out": [
        "\"expiry_date\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"expiry_date\""
      ]
    },
    "1319": {
      "op": "app_local_del",
      "stack_out": []
    },
    "1320": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1322": {
      "op": "bytec 10 // \"issued_by\"",
      "defined_out": [
        "\"issued_by\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"issued_by\""
      ]
    },
    "1324": {
      "op": "app_local_del",
      "stack_out": []
    },
    "1325": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1327": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"is_revoked\""
      ]
    },
    "1328": {
      "op": "app_local_del",
      "stack_out": []
    },
    "1329": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1331": {
      "op": "bytec 6 // \"revocation_reason\"",
      "defined_out": [
        "\"revocation_reason\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"revocation_reason\""
      ]
    },
    "1333": {
      "op": "app_local_del",
      "stack_out": []
    },
    "1334": {
      "retsub": true,
      "op": "retsub"
    },
    "1335": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.check_expiration",
      "params": {
        "account#0": "bytes"
      },
      "block": "check_expiration",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1338": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1340": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "account#0 (copy)"
      ]
    },
    "1342": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1343": {
      "op": "bnz check_expiration_bool_true@2",
      "stack_out": []
    },
    "1346": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1348": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1349": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"admin\""
      ]
    },
    "1350": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1351": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "1352": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1353": {
      "op": "bz check_expiration_bool_false@3",
      "stack_out": []
    },
    "1356": {
      "block": "check_expiration_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1357": {
      "op": "b check_expiration_bool_merge@4"
    },
    "1360": {
      "block": "check_expiration_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1361": {
      "block": "check_expiration_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": []
    },
    "1362": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1364": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1365": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "1366": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "1367": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "result#0"
      ]
    },
    "1368": {
      "op": "len",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1369": {
      "error": "This account does not have any certificate.",
      "op": "assert // This account does not have any certificate.",
      "stack_out": []
    },
    "1370": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1372": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1373": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"is_revoked\""
      ]
    },
    "1374": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1375": {
      "error": "check self.is_revoked exists for account",
      "op": "assert // check self.is_revoked exists for account",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1376": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1377": {
      "error": "The certificate is revoked.",
      "op": "assert // The certificate is revoked.",
      "stack_out": []
    },
    "1378": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1380": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)"
      ]
    },
    "1382": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "1383": {
      "op": "bytec_3 // \"expiry_date\"",
      "defined_out": [
        "\"expiry_date\"",
        "0",
        "account#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "0",
        "\"expiry_date\""
      ]
    },
    "1384": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1385": {
      "error": "check self.expiry_date exists for account",
      "op": "assert // check self.expiry_date exists for account",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%3#0"
      ]
    },
    "1386": {
      "op": ">",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "1387": {
      "op": "bz check_expiration_else_body@6",
      "stack_out": []
    },
    "1390": {
      "op": "pushbytes \"The certificate is expired.\"",
      "defined_out": [
        "validity#0"
      ],
      "stack_out": [
        "validity#0"
      ]
    },
    "1419": {
      "op": "b check_expiration_after_if_else@7"
    },
    "1422": {
      "block": "check_expiration_else_body@6",
      "stack_in": [],
      "op": "pushbytes \"The certificate is not expired.\"",
      "defined_out": [
        "validity#0"
      ],
      "stack_out": [
        "validity#0"
      ]
    },
    "1455": {
      "block": "check_expiration_after_if_else@7",
      "stack_in": [
        "validity#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "validity#0"
      ]
    },
    "1456": {
      "subroutine": "smart_contracts.smartcontract.contract.Blockchainsmartcontract.check_revocation",
      "params": {
        "account#0": "bytes"
      },
      "block": "check_revocation",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "1459": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1461": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1462": {
      "op": "bytec_2 // \"admin\"",
      "defined_out": [
        "\"admin\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"admin\""
      ]
    },
    "1463": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1464": {
      "error": "check self.admin exists",
      "op": "assert // check self.admin exists",
      "stack_out": [
        "tmp%0#0",
        "maybe_value%0#0"
      ]
    },
    "1465": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1466": {
      "op": "bnz check_revocation_bool_true@2",
      "stack_out": []
    },
    "1469": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1471": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "account#0 (copy)"
      ]
    },
    "1473": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1474": {
      "op": "bz check_revocation_bool_false@3",
      "stack_out": []
    },
    "1477": {
      "block": "check_revocation_bool_true@2",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1478": {
      "op": "b check_revocation_bool_merge@4"
    },
    "1481": {
      "block": "check_revocation_bool_false@3",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "1482": {
      "block": "check_revocation_bool_merge@4",
      "stack_in": [
        "or_result%0#0"
      ],
      "op": "assert",
      "defined_out": [],
      "stack_out": []
    },
    "1483": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1485": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1486": {
      "op": "bytec_0 // \"certificateID\"",
      "defined_out": [
        "\"certificateID\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"certificateID\""
      ]
    },
    "1487": {
      "op": "app_local_get_ex",
      "defined_out": [
        "exists#0",
        "result#0"
      ],
      "stack_out": [
        "result#0",
        "exists#0"
      ]
    },
    "1488": {
      "error": "Account has not opted in.",
      "op": "assert // Account has not opted in.",
      "stack_out": [
        "result#0"
      ]
    },
    "1489": {
      "op": "len",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1490": {
      "error": "This account does not have any certificate.",
      "op": "assert // This account does not have any certificate.",
      "stack_out": []
    },
    "1491": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1493": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%6#0",
        "account#0 (copy)"
      ]
    },
    "1495": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%6#0",
        "account#0 (copy)",
        "0"
      ]
    },
    "1496": {
      "op": "bytec_3 // \"expiry_date\"",
      "defined_out": [
        "\"expiry_date\"",
        "0",
        "account#0 (copy)",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "account#0 (copy)",
        "0",
        "\"expiry_date\""
      ]
    },
    "1497": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1498": {
      "error": "check self.expiry_date exists for account",
      "op": "assert // check self.expiry_date exists for account",
      "stack_out": [
        "tmp%6#0",
        "maybe_value%2#0"
      ]
    },
    "1499": {
      "op": "<",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1500": {
      "error": "The certificate is caducated.",
      "op": "assert // The certificate is caducated.",
      "stack_out": []
    },
    "1501": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1503": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1504": {
      "op": "bytec_1 // \"is_revoked\"",
      "defined_out": [
        "\"is_revoked\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"is_revoked\""
      ]
    },
    "1505": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1506": {
      "error": "check self.is_revoked exists for account",
      "op": "assert // check self.is_revoked exists for account",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "1507": {
      "op": "bnz check_revocation_else_body@6",
      "stack_out": []
    },
    "1510": {
      "op": "pushbytes \"The certificate is valid.\"",
      "defined_out": [
        "validity#0"
      ],
      "stack_out": [
        "validity#0"
      ]
    },
    "1537": {
      "op": "b check_revocation_after_if_else@7"
    },
    "1540": {
      "block": "check_revocation_else_body@6",
      "stack_in": [],
      "op": "pushbytes \"The certificate is revoked.\"",
      "defined_out": [
        "validity#0"
      ],
      "stack_out": [
        "validity#0"
      ]
    },
    "1569": {
      "block": "check_revocation_after_if_else@7",
      "stack_in": [
        "validity#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "validity#0"
      ]
    }
  }
}